name: Create and publish container image

on:
  push:
    branches: ['main', 'dev']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ values.name }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
        # The raw blocks ensure correct rendering of the template by Backstage.
        # In this case, we want to preserve the content exactly as-is, and not
        # have Backstage attempt to render env.REGISTRY etc
        {% raw %}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        {% endraw %}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
        {% raw %}
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        {% endraw %}

      # This step uses the `docker/build-push-action` action to build the image. If
      # the build succeeds, it pushes the image to GitHub's container registry.
      # It uses the `tags` and `labels` parameters to tag and label the image
      # with the output from the previous "meta" step.
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          {% raw %}
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          {% endraw %}
          labels: ${{ steps.meta.outputs.labels }}
